<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
  </head>
  <body>

    <h1><%= title %></h1>

    <div style="width:40%; float:left;">
    <% if(files.length > 0){ %>
      <% files.forEach(function(file) { %>
        <p><a href="<%= file %>" target="_blank"><%= file %></a> <button onclick="deleteJsonButton(event);" style="color:red; float:right;">Delete</button><button onclick="showJsonButton(event);" style="float:right;">ShowJson</button></p>
      <% }); %>
    <% } %>
  </div>

  <div style="width:40%; position:fixed; right:50px;">
      <input type="text" id="input_json_url" style="width:50%; height:20px;"></input> <button onclick="addJsonButton(event);" style="color:blue; float:right; font-size: 13px;">Add</button><button onclick="validateJsonButton(event);" style="float:right; font-size: 13px;">Validate</button>
      <textarea id="textarea_json" style="width:100%; height:400px; margin-top:10px;"></textarea>
      <span id="span_validate_result"style="width:100%; word-wrap:break-word; margin-top:10px;"></span>
  </div>

  </body>

  <script>
    var _spanValidateResultEl = document.getElementById('span_validate_result');
    var _inputJsonUrlEl = document.getElementById('input_json_url');
    var _textareaJsonEl = document.getElementById('textarea_json');

    function showJsonButton(e) {
      var target = e.target;
      var aTagEl = target.previousElementSibling.previousElementSibling;
      var requestUrl = aTagEl.text;
      //console.log(requestUrl);

      requestXhttp(requestUrl, "GET", null, function(jsonString) {
        var json = JSON.parse(jsonString);
        var prettyJsonString = JSON.stringify(json, undefined, 4);

        _inputJsonUrlEl.value = aTagEl.text;
        _textareaJsonEl.value = prettyJsonString;
      });
    }

    function deleteJsonButton(e) {
      var target = e.target;
      var aTagEl = target.previousElementSibling;
      var requestUrl = aTagEl.text;
      //console.log(requestUrl);

      if (confirm(requestUrl + " 항목을 삭제하시겠습니까?")) {
        requestXhttp(requestUrl, "DELETE", null, function(data) {
          location.reload();
        });
      }
    }

    function addJsonButton(e) {
      var target = e.target;
      var inputTagEl = target.previousElementSibling;
      var requestUrl = inputTagEl.value;
      // console.log(requestUrl);
      var jsonString = _textareaJsonEl.value;

      requestXhttp(requestUrl, "POST", jsonString,
      function(data) {
        location.reload();
      },
      function(error) {
        errorValidateResult(error);
      });
    }

    function validateJsonButton(e) {
      var validateResult;
      var validateResultColor;
      try {
        var jsonString = _textareaJsonEl.value;
        var json = JSON.parse(jsonString);
        var prettyJsonString = JSON.stringify(json, undefined, 4);

        _textareaJsonEl.value = prettyJsonString;
        successValidateResult();
      } catch(e) {
        // alert(e.message);
        errorValidateResult(e.message);
      }
    }

    function successValidateResult() {
      _spanValidateResultEl.style.color = '#0a5';
      _spanValidateResultEl.innerHTML = 'Success Validation!';
    }
    function errorValidateResult(validateResult) {
      _spanValidateResultEl.style.color = '#f00';
      _spanValidateResultEl.innerHTML = validateResult;
    }

    function requestXhttp(url, method, data, successCallback, errorCallback) {
      var xhttp;
      xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
          if (successCallback) {
            successCallback(this.responseText);
          }
        } else if (this.readyState == 4 && this.status != 200) {
          if (errorCallback) {
            errorCallback(this.responseText);
          } else {
            // console.log(this);
            alert("Server Error : " + this.responseText);
          }
        }
      };
      xhttp.open(method, url, true);
      xhttp.setRequestHeader("Content-type", "application/json");
      xhttp.send(data);
    }
  </script>
</html>
