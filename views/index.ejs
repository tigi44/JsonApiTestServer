<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link href="/javascripts/jsoneditor/dist/jsoneditor.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel='stylesheet' href='/stylesheets/styleIndex.css' />
  </head>
  <body>
    <header>
    <nav class="navbar navbar-expand navbar-dark bg-dark">
          <a id="a-logo" href="/"></a>
          <a class="navbar-brand" href="/"><%= title %></a>
          <!-- <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarsExample02" aria-controls="navbarsExample02" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button> -->

          <div class="collapse navbar-collapse" id="navbarsExample02">
            <!-- <ul class="navbar-nav mr-auto">
              <li class="nav-item active">
                <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="#">Link</a>
              </li>
            </ul> -->
            <form class="form-inline my-2 my-md-0" action="/">
              <div class="input-group">
                <input type="text" class="form-control" name="search" placeholder="SEARCH" aria-label="SEARCH" value="<%= search %>">
                <div class="input-group-append">
                  <button class="btn btn-secondary" type="submit">SEARCH</button>
                </div>
              </div>
            </form>
          </div>
    </nav>
  </header>

  <main class="container" role="main">
    <div class="filepath">
      <% var keys = Object.keys(hierarchyFiles); %>
      <% if(keys.length > 0){ %>
        <% keys.forEach(function(key) { %>
          <div class="card">
            <div class="card-header">
              <h5 class="mb-0">
                <button class="btn btn-link btn-card-header" data-toggle="collapse" data-target="#<%= key %>" aria-expanded="false" aria-controls="collapseOne">
                  <%= key %>
                </button>
              </h5>
            </div>

            <div id="<%= key %>" class="table-responsive collapse show">
              <table class="table table-striped table-sm card-body">
                <colgroup>
                  <col style="width:80%">
                  <col style="width:10%">
                  <col style="width:10%">
                </colgroup>
                <thead>
                </thead>
                <tbody>
                  <% var files = hierarchyFiles[key]; %>
                  <% if(files.length > 0){ %>
                    <% files.forEach(function(file) { %>
                      <tr>
                        <td><a href="<%= file %>" target="_blank" class="a-text-align"><%= file %></a></td>
                        <td><button onclick="showJsonButton(event);" class="btn btn-dark btn-sm">Show</button></td>
                        <td><button onclick="deleteJsonButton(event);" class="btn btn-danger btn-sm">Delete</button></td>
                      </tr>
                    <% }); %>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        <% }); %>
      <% } %>
    </div>

    <div class="jumbotron json-edit">
        <div class="input-group mb-3">
          <input type="text" id="input_json_url" class="form-control" placeholder="JSON API URL" aria-label="JSON API URL" aria-describedby="basic-addon2">
          <div class="input-group-append">
            <button class="btn btn-dark" type="button" onclick="addJsonButton(event);">Add</button>
          </div>
        </div>

        <div id="jsoneditor"></div>
        <button onclick="validateJsonButton(event);" class="btn btn-dark btn-validate">Validate</button>
        <span id="span_validate_result"></span>
    </div>
  </main>


  </body>
  <script src="/javascripts/jsoneditor/dist/jsoneditor.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
  <script>
    var _spanValidateResultEl = document.getElementById('span_validate_result');
    var _inputJsonUrlEl       = document.getElementById('input_json_url');
    var jsonEditorMode        = ['code' /*, 'text'*/ , 'tree' /*, 'view'*/ /*, 'form'*/];
    var container             = document.getElementById("jsoneditor");
    var options               = {
                                  modes : jsonEditorMode,
                                  onError : onError,
                                  onModeChange : onModeChange
                                };
    var editor                = new JSONEditor(container, options);

    function onError(error) {
      errorValidateResult(error);
    }

    function onModeChange(newMode, oldMode) {
      jsonEditorExpandAll(newMode);
    }

    function jsonEditorExpandAll(mode) {
      if (mode == 'tree')
        editor.expandAll();
    }

    function showJsonButton(e) {
      var target      = e.target;
      var $aTag      = $(target).parents("tr").find("a");
      var requestUrl  = $aTag.text();
      //console.log(requestUrl);

      requestXhttp(requestUrl, "GET", null, function(jsonString) {
        var json = JSON.parse(jsonString);

        _inputJsonUrlEl.value = requestUrl;
        editor.set(json);
        jsonEditorExpandAll(editor.getMode());
      });
    }

    function deleteJsonButton(e) {
      var target      = e.target;
      var $aTag      = $(target).parents("tr").find("a");
      var requestUrl  = $aTag.text();
      //console.log(requestUrl);

      if (confirm(requestUrl + " 항목을 삭제하시겠습니까?")) {
        requestXhttp(requestUrl, "DELETE", null, function(data) {
          location.reload();
        });
      }
    }

    function addJsonButton(e) {
      var target      = e.target;
      var $inputTag  = $("#input_json_url");
      var requestUrl  = $inputTag.val();
      var jsonString  = editor.getText();
      // console.log(requestUrl);

      requestXhttp(requestUrl, "PUT", jsonString,
      function(data) {
        location.reload();
      },
      function(error) {
        errorValidateResult(error);
      });
    }

    function validateJsonButton(e) {
      try {
        var json             = editor.get();
        var prettyJsonString = JSON.stringify(json, undefined, 4);

        editor.set(JSON.parse(prettyJsonString));
        jsonEditorExpandAll(editor.getMode());
        successValidateResult();
      } catch(error) {
        errorValidateResult(error);
      }
    }

    function successValidateResult() {
      _spanValidateResultEl.style.color   = '#0a5';
      _spanValidateResultEl.innerHTML     = 'Success Validation!';
    }
    function errorValidateResult(validateResult) {
      _spanValidateResultEl.style.color   = '#f00';
      _spanValidateResultEl.innerHTML     = validateResult;
    }

    function requestXhttp(url, method, data, successCallback, errorCallback) {
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
        if (this.readyState == 4 && (200 <= this.status && this.status < 300)) {
          if (successCallback) {
            successCallback(this.responseText);
          }
        } else if (this.readyState == 4 && !(200 <= this.status && this.status < 300)) {
          if (errorCallback) {
            errorCallback(this.responseText);
          } else {
            // console.log(this);
            alert("Server Error : " + this.responseText);
          }
        }
      };
      xhttp.open(method, url, true);
      xhttp.setRequestHeader("Content-type", "application/json");
      xhttp.send(data);
    }
  </script>
</html>
